# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: bionic
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    - CRATE_NAME=newdoc

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
        include:
                # # Android
                # - env: TARGET=aarch64-linux-android DISABLE_TESTS=1
                # - env: TARGET=arm-linux-androideabi DISABLE_TESTS=1
                # - env: TARGET=armv7-linux-androideabi DISABLE_TESTS=1
                # - env: TARGET=i686-linux-android DISABLE_TESTS=1
                # - env: TARGET=x86_64-linux-android DISABLE_TESTS=1

                # # iOS
                # - env: TARGET=aarch64-apple-ios DISABLE_TESTS=1
                #   os: osx
                # - env: TARGET=armv7-apple-ios DISABLE_TESTS=1
                #   os: osx
                # - env: TARGET=armv7s-apple-ios DISABLE_TESTS=1
                #   os: osx
                # - env: TARGET=i386-apple-ios DISABLE_TESTS=1
                #   os: osx
                # - env: TARGET=x86_64-apple-ios DISABLE_TESTS=1
                #   os: osx

                # Linux
                - env: TARGET=aarch64-unknown-linux-gnu
                # - env: TARGET=arm-unknown-linux-gnueabi
                # - env: TARGET=armv7-unknown-linux-gnueabihf
                # - env: TARGET=i686-unknown-linux-gnu
                # - env: TARGET=i686-unknown-linux-musl
                # - env: TARGET=mips-unknown-linux-gnu
                # - env: TARGET=mips64-unknown-linux-gnuabi64
                # - env: TARGET=mips64el-unknown-linux-gnuabi64
                # - env: TARGET=mipsel-unknown-linux-gnu
                # - env: TARGET=powerpc-unknown-linux-gnu
                # - env: TARGET=powerpc64-unknown-linux-gnu
                # - env: TARGET=powerpc64le-unknown-linux-gnu
                # - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
                - env: TARGET=x86_64-unknown-linux-gnu
                # - env: TARGET=x86_64-unknown-linux-musl

                # OSX
                # - env: TARGET=i686-apple-darwin
                #   os: osx
                - env: TARGET=x86_64-apple-darwin
                  os: osx

                # *BSD
                # The FreeBSD build is failing. I'm disabling it for now.
                # - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
                # - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
                # - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

                # Windows
                - env: TARGET=x86_64-pc-windows-gnu

                # Bare metal
                # These targets don't support std and as such are likely not suitable for
                # most crates.
                # - env: TARGET=thumbv6m-none-eabi
                # - env: TARGET=thumbv7em-none-eabi
                # - env: TARGET=thumbv7em-none-eabihf
                # - env: TARGET=thumbv7m-none-eabi

                # # Testing other channels
                # - env: TARGET=x86_64-unknown-linux-gnu
                #   rust: nightly
                # - env: TARGET=x86_64-apple-darwin
                #   os: osx
                #   rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  api_key:
    secure: mtCvNJGAukCq1lm2hTTurvV0ockz7OZC61OY9mcx3vpIsAPIefebSq81J8T0hTbyqF7olbKp3ohqmNXmRlzHJfVSFaocnQuxVK7KSvdobjh+wJlp4GlReuXI6gsvlTCdb8IR6VHy1l20v/ONhuzRYFg+pfH53dAeTbXWVXgnDctsoBDwd1uJrI2LYDWwzk1amRSdfIZwHA0iQqqjDbWzpTnpaVyaN2PInYssobVPyWOyMRsnxn0biouKGWF5Y8rd5Q5PhD8uFVSMhBFQWwcviVBsoSgzQimox0crYdCnP/HR5ROElyVNpwnW8M9nFDXuOyXvSAFLWuxQ7dB0QE8chHLKT7m3KJk2YxqxaqrB0VbgzXvJHU8o3Gg2/Qpo5ww1d42AlAbSZurAFMt2IUZQQPvwVmnDjG3pTAlFPb0mCv/vmhfRYgx8n+CbFK9kxsMOgY857X2KwgDfygq7YAp9IYwcOi8zFiNyQnBVhhFiKHcD2ZpBLwJJ/vqLHzh2ZM32xma/oEnpixBgUr8is1JCk2GXHEo4eEOYAYTFx4zNZTaPoyn4yZD6i8BL7zBm3bKS55JfF/LtVMspFLLUJAhoJHzymSCQP1BuBEWjtOmPL00MdSbrFxlFH42xrgaZCWVaK624Or4GocGB3t0DENdQisq6W07p4OBoo8QIAwm49Cs=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - main

notifications:
  email:
    on_success: never
